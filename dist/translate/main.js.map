{"version":3,"sources":["ws (ignored)","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport * as io from \"socket.io-client\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n\n  userText: string;\n  translationText: string;\n  targets: [string];\n  target: string;\n  visibility = {\n    canListen: false,\n    translationVisible: false\n  }\n\n  socket: SocketIOClient.Socket;\n\n  constructor() {\n    this.socket = io.connect();\n  }\n  \n  ngOnInit() {\n    this.userText = \"\";\n    this.translationText = \"\";\n    this.target = \"\";\n    this.visibility.canListen = false;\n    this.visibility.translationVisible = false;\n    this.listenToEvents();\n  }\n\n\n  listenToEvents() {\n    this.socket.on(\"targets\", targets => {\n      this.targets = targets.targets;\n    });\n\n    this.socket.on(\"translation\", translation => {\n      this.translationText = translation;\n      this.visibility.translationVisible = true;\n    });\n\n    this.socket.on(\"mp3\", fileName => {\n      const audioTag = <HTMLAudioElement>document.getElementById(\"au\");\n      audioTag.src = `${fileName}?time=` + new Date().getTime();\n      audioTag.load();\n      this.visibility.canListen = true;\n    }); \n  }\n\n  submitText() {\n    this.socket.emit(\"newText\", {\n      target: this.target,\n      text: this.userText\n    })\n    this.visibility.canListen = false;\n    this.visibility.translationVisible = false;\n  }\n\n  onSelect(target: string) {\n    this.target = target;\n  }\n\n}\n","<h1>FIT2095, Translate App</h1>\n<form>\n\n  <div class=\"form-group\">\n    <label for=\"userText\">Your Text in English</label>\n    <input type=\"text\" class=\"form-control\" id=\"userText\" name=\"usetText\" [(ngModel)]=\"userText\">\n  </div>\n\n  <div>\n  <p>Select a Language</p>\n  <ul class=\"targets\">\n    <li *ngFor=\"let t of targets\" [class.selected]=\"t === target\" (click)=\"onSelect(t)\">\n      {{t}}\n    </li>\n  </ul>\n  </div> \n\n  <button class=\"button\" (click)=\"submitText()\">Submit</button>\n</form>\n\n<audio controls id=\"au\" [attr.disabled]=\"!visibility.canListen\">\n  <source src=\"\" type=\"audio/mpeg\">\n</audio>\n\n<p *ngIf=\"visibility.translationVisible\">{{translationText}}</p>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}